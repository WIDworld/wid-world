// Identify "wealth" (actually, macro) and "income" (actually, micro) variables
import excel "$codes_dictionary", ///
	sheet("Wealth_Macro_Variables") cellrange(D4:D140) clear allstring
rename D widcode
replace widcode = subinstr(widcode, "*", "", 1)
replace widcode = substr(widcode, 2, 5) if strlen(widcode) == 6
generate type = "wealth"
tempfile types
save "`types'"

import excel "$codes_dictionary", ///
	sheet("Income_Macro_Variables") cellrange(D4:D138) clear allstring
rename D widcode
replace widcode = subinstr(widcode, "*", "", 1)
replace widcode = substr(widcode, 2, 5) if strlen(widcode) == 6
generate type = "wealth"
append using "`types'"
save "`types'", replace 

import excel "$codes_dictionary", ///
	sheet("Income_Distributed_Variables") cellrange(D4:D123) clear allstring
rename D widcode
replace widcode = subinstr(widcode, "*", "", 1)
replace widcode = substr(widcode, 2, 5) if strlen(widcode) == 6
generate type = "income"
append using "`types'"
save "`types'", replace

import excel "$codes_dictionary", ///
	sheet("Other_WTID") cellrange(B4:B123) clear allstring
rename B widcode
drop if widcode == ""
replace widcode = subinstr(widcode, "*", "", 1)
replace widcode = substr(widcode, 2, 5) if strlen(widcode) == 6
generate type = "income"
append using "`types'"
save "`types'", replace

// Remove duplicates: they create problems and serve no purpose
duplicates drop
duplicates tag widcode, generate(duplicate)
drop if duplicate
drop duplicate
save "`types'", replace

label data "Generated by correct-wtid-metadata.do"
use "$work_data/add-new-wid-codes-output-metadata.dta", clear

// Complete sources in Australia
replace source_income = "Atkinson, Anthony B. and Leigh, Andrew (2007). The Distribution " + ///
	"of Top Incomes in Australia; in Atkinson, A. B. and Piketty, T. (editors) Top " + ///
	"Incomes over the Twentieth Century. A Contrast Between Continental European " + ///
	"and English-Speaking Countries, Oxford University Press, chapter 7. " + ///
	"Burkhauser, Richard V. , Hahn, Markus H. and Wilkins, Roger (2013). " + ///
	"Measuring Top Incomes Using Tax Record Data: A Cautionary Tale from Australia. " + ///
	"NBER Working Paper No. 19121. Burkhauser, Richard V. , Hahn, Markus H. and Wilkins, " + ///
	"Roger (2015). Measuring top incomes using tax record data: a cautionary tale from " + ///
	"Australia. Journal of Economic Inequality, 13(2): 181-205. Series updated by Roger Wilkinson." if (iso == "AU")

sort iso sixlet source_income source_wealth

format source_income source_wealth method %80s

generate widcode = substr(sixlet, 2, 5)

merge n:1 widcode using "`types'", nogenerate keep(master match)
replace type = "income" if (widcode == "diinc")
replace type = "income" if substr(widcode, 1, 3) == "pop"
replace type = "income" if substr(widcode, 1, 3) == "tax"
replace type = "income" if substr(widcode, 1, 3) == "cpi"
replace type = "wealth" if substr(widcode, 1, 3) == "nyi"
replace type = "wealth" if (widcode == "nninc")

// Complete types for the variables coming from Old_codesWTID:
replace type = "wealth" if (widcode =="isgro") // var="Private saving. Non-profit saving. Gross non-profit saving", new: sagnp
replace type = "wealth" if (widcode =="isdep") // var="Private saving. Non-profit saving. Non-profit capital depreciation", new: cfcnp
replace type = "wealth" if (widcode =="isavi") // var="Private saving. Non-profit saving. Net non-profit saving", new: savnp
replace type = "wealth" if (widcode =="nsgro") // var="National saving. Gross national saving", new: savig
replace type = "wealth" if (widcode =="nsavi") // var="National saving. Net national saving", new : savin
replace type = "wealth" if (widcode =="nsdep") //  var="National saving. National capital depreciation", new : (?)

replace type = "wealth" if (widcode =="gsavi") // var="Public saving. Net public saving", new : savgo
replace type = "wealth" if (widcode =="gsdep") // var="Public saving. Public capital depreciation", new : cfcgo
replace type = "wealth" if (widcode =="gsgro") // var="Public saving. Gross public saving", new :  saggo
replace type = "wealth" if (widcode =="csgro") // var="Private saving. Corporate saving. Gross corporate saving", new: segco
replace type = "wealth" if (widcode =="csavi") // var="Private saving. Corporate saving. Net corporate saving", new: secco
replace type = "wealth" if (widcode =="csdep") // var="Private saving. Corporate saving. Corporate capital depreciation", new: cfcco
replace type = "wealth" if (widcode =="hsavi") // var="Private saving. Personal saving. Net personal saving", new: savho
replace type = "wealth" if (widcode =="hsdep") // var="Private saving. Personal saving. Personal capital depreciation", new: cfcho
replace type = "wealth" if (widcode =="hsgro") // var="Private saving. Personal saving. Gross personal saving", new: sagho

replace type = "wealth" if (widcode =="psgro") // var="Private saving. Gross private saving", new: 
replace type = "wealth" if (widcode =="psdep") // var="Private saving. Private capital depreciation", new: 
replace type = "wealth" if (widcode =="psavi") // var="Private saving. Net private saving", new: 
replace type = "wealth" if (widcode =="dsavi") // var="National saving. Domestic investment", new: (?)
replace type = "wealth" if (widcode =="fsavi") // var="National saving. Net foreign saving", new:  (?)
replace type = "wealth" if (widcode =="cwfix") // var="Corporate cash, deposits, bonds & loans"
replace type = "wealth" if (widcode =="gwfix") // var="Government cash, deposits, bonds & loans"
replace type = "wealth" if (widcode =="iwfix") // var="Non-profit currency, deposits, bonds & loans"
replace type = "wealth" if (widcode =="pwfix") // var="Private currency, deposits, bonds & loans"
replace type = "wealth" if (widcode =="hwfix") // var="Personal cash, bonds & deposits"
//--------------------------
assert type != ""

// Extract source for inflation
generate source = "Global Financial Data" ///
	if strpos(method, "globalfinancialdata") & inlist(sixlet, "icpixx", "inyixx")
replace method = "" if inlist(sixlet, "icpixx", "inyixx")

replace source = strtrim(cond(type == "income", source_income, source_wealth)) if (source == "")
replace source = strtrim(source_wealth) if (source == "")
drop source_income source_wealth type widcode

format source method %80s
sort iso sixlet source

replace source = source + `"; "'

replace source = source + " Updated by Yang, “Regional DINA Update for Asia” (2020)" if strpos(sixlet, "fiinc") & inlist(iso, "ID", "SG", "TW")

replace method = "Tax units are: individuals aged 15+ minus married females " + ///
	"until 1969; individuals aged 15+ from 1970. Data before 1990 are based " + ///
	"on tabulated tax data, and the unit of analysis is the tax unit. In 1990 " + ///
	"and after, data are based on the Income Distribution Survey, the unit of " + ///
	"analysis is the individual aged 15 and over with non-zero incomes. " + ///
	"Excludes capital gains." if (iso == "FI") & inlist(sixlet, "sfiinc", "afiinc")

label data "Generated by correct-wtid-metadata.do"
save "$work_data/correct-wtid-metadata-output.dta", replace
